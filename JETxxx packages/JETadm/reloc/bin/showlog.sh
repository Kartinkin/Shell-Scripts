#!/usr/xpg4/bin/sh
# Version	0.0
# Date		3 Nov 98
# Author	Kirill Kartinkin

# Программа производит просмотр заархивированных файлов журналов.
# Из директории, где хранятся три последние копии файлов
# нужный файл извлекается, при необходимости разжимается,
# и выводится на экран программой, заданной в переменной PAGER.
#
# Пользователь adm из группы adm получает все права на архив.
#
# Программа проверяет результаты операций перемещения и сжатия файлов, если
# одна из них завершились с ошибкой, журнальный файл не архивируется.
#
# Опции:
#	-d path	директория, в которую меремещаются файлы.
#		Если параметр не задан, используется /var/adm/logs.archive
#	-c	архивируемые файлы сжимались
#		по умолчанию установлен
#	-C	архивируемые файлы не сжимались
#	-a age	версия файла жкрнала
#		cur		текущий файл, имя которого восстанавливаем,
#			основываясь на содержимом архива
#		arc		самая последняя версия заархивированного журнала
#		old		самая средняя
#		oldest	самая старая версия
#
# Возвращаемые значения:
#	0	O.K.
#	1	невозможно создать архив
#	2	ошибка при чтении списка файлов
#	4	ошибка сдвига старых архивных файлов
#	8	ошибка архивирования файла
#	16	ошибка сжатия файла
#	100	ошибка в командной строке
#	101	невозможно определить функцию Logger
#

################################################################################
# Описываем переменные конфигурации и производим необходимые проверки

# Устанавливаем необходимые пути поиска
PATH=/usr/xpg4/bin:/var/adm/bin:$PATH

Name=${0##*/}

# Директория, в которой ведется архив журналов.
# Не рекомендуется заранее ее создавать.
ArchiveDir=/var/adm/logs.archive

# Суффикс в имени сжатого файла
CompressExt=".Z"

Age="cur"

# Просмотровщик по умолчанию -- more
: ${PAGER:=more}

################################################################################
# Определяем функцию Logger
LOGGER_FACILITY=user
LOGGER_TAG=logcleaner
LOGGER_LOG=0 # Запись в syslog не требуется
if [[ -f /var/adm/bin/logger.sh ]]
then
	. /var/adm/bin/logger.sh
else
	print "ERROR: Unnable to source /var/adm/bin/logger.sh"
	exit 101
fi

################################################################################
# Разбираем параметры командной строки
while (( $# > 0 ))
do
	case "$1" in
		-c) Compress=1;;
		-C) Compress=0
			CompressExt=""
			;;
		-d) ArchiveDir=$2
			shift
			;;
		-a) Age=$2
			shift
			;;
        -h|-?)
			print "usage: ${Name} [-c|C] [-d path] [-a cur|arc|old|oldest] logname"
			exit 100
			;;
		*)
			File=$1
			;;
    esac
	shift
done

case ${Age} in
	cur|arc)
		AgeE=""
		;;
	old|oldest)
		AgeE=".${Age}"
		;;
esac

################################################################################
# Если нет директории с архивом, создаем ее
if [[ ! -d ${ArchiveDir} ]]
then
	Logger err "Unnable to open log's archive (${ArchiveDir})."
	exit 1
fi

################################################################################
# Переходим к обработке файла

cd ${ArchiveDir}
# Ищем файл "*${File}${AgeE}${CompressExt}"
FileName=$(ls |awk -v C=${CompressExt} -v Log=${File} -v A=${AgeE} \
	'$1 ~ Log A C"$" {print $1}')
if [[ -z ${FileName} ]]
then
	# Не нашли
	Logger err "Log file \"${File}${AgeE}${CompressExt}\" not found in ${ArchiveDir}."
	exit
fi

if [[ ${Age} != cur ]]
then
	if [[ -z ${CompressExt} ]]
	then
		${PAGER} ${FileName}
	else
		uncompress - <${FileName} | ${PAGER}
	fi
else
		# Из имени архивного файла восстанавливаем полный путь
		# В имени файла все "." заменили на "_",
		# из полного пути убрали лидируюший знак "/",
		# в пути все "/" заменили на ".".
		# Делаем обратное преобразование
		if [[ -z ${CompressExt} ]]
		then
			# Файлы не сжаты, имя транслируется напрямую
			FileName=$(print ${FileName} | \
				sed -e "s/\./\//g" -e "s/_/\./g")
		else
			# У файлов стоит расширение .Z,
			# сначала удаляем расширение
			FileName=$(print ${FileName} | \
				sed -e "s/${CompressExt}//" -e "s/\./\//g" -e "s/_/\./g")
		fi
		# Добавляем в начало /
		${PAGER} /${FileName}
fi
