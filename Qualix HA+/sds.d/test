#!/usr/xpg4/bin/sh
# Version	0.0q
# Date		31 Jan 2002
# Author	Kirill Kartinkin

# Программа для проверки работоспособности кластерного сервиса,
# представленного СУБД Oracle.
#
# Работа программы гарантирована с СУБД версий выше 7.3.x.
#
# Программу требуется запускать от имени пользователя root.
#
# Внимание! Данная программа работает только совместно с Qualix и только в
# рамках группы сервисов.
#
# Параметры:
#	нет
#
# Возвращаемые значения:
#	0	O.K.
#	1	Физический диск недоступен
#	2	Файловая система не замонтирована
#	3	Невозможно создать файл
#	4	Невозможно записать в файл
#	5	Невозможно прочитать из файла
#	6	Невозможно удалить файл
#	101	Ошибка подключения вспомогательных файлов

# Если эти переменные не описаны, значит нас запустили "руками"
if [[ -z ${TOPDIR} || -z ${SGNAME} || -z ${SVCNAME} ]]
then
	# Ошибка, переменные не описаны
	exit 100
fi

################################################################################
# Описываем переменные конфигурации и производим необходимые проверки

# Устанавливаем необходимые пути поиска
PATH=/usr/sbin:/usr/opt/SUNWmd/bin:/usr/xpg4/bin:/usr/bin:/var/adm/bin

# Строим расширенное имя программы
Name=${SGNAME}.${SVCNAME}.${0##*/}

# Внимание! Для работы программы необходимы следующие файлы:
set -A FilesToSource \
	${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/environment \
	/var/adm/bin/logger.sh
	
# В файле ${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/environment содержатся
# основные настроечные параметры пакета.
#	SGFacility
#
# Файле /var/adm/bin/logger.sh содержит функцию Logger
# Следующие переменные необходимы для описания этой функции.
# При описании используем одинарные кавычки, чтобы передать имя переменной
# окружения, а не ее значение.
LOGGER_FACILITY='${SGFacility}'
LOGGER_TAG=${SGNAME}

# Добавляем указанные выше файлы
for File in ${FilesToSource[*]}
do
	if [[ -f ${File} ]]
	then
		. ${File}
	else
		print "${Name}:\tERROR: Unnable to source ${File}"
		exit 101
	fi
done

################################################################################
################################################################################

Ret=0

CF="$(cat ${ControlFile})"
>${ControlFile}

for DS in $(grep -v '^[ \t]*#' ${TOPDIR}/sg/${SGNAME}/sds.ds.tab | grep -v '^$' )
do
	metastat -s ${DS} | awk -v DS=${DS} -v MD="" '
		$1~"^"DS"/" { MD=$1 ; break }
		$0~"ainten" { print MD ; MD="" }' | \
	while read MD
	do
		print "${MD}" >>${ControlFile}
		if [[ -z $(print "${CF}" | grep "^${MD}$" 2>/dev/null) ]]
		then
			i=${MD%:}
			Logger err "Metadevice $i failed."
			metastat -s ${DS} ${i#*/}
			Ret=1
		fi
	done
done

exit ${Ret}
