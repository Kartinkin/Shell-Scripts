#!/usr/xpg4/bin/sh
# Version	2.1q
# Date		09 Aug 2000
# Author	Kirill Kartinkin

# Программа для перевода кластерного сервиса, представленного
# демоном listener к СУБД Oracle, в состояние SERVE.
# Предполагается, что имя listener'а совпадает с SID'ом.
#
# Работа программы гарантирована с СУБД версий выше 7.3.x.
#
# Программу требуется запускать от имени пользователя root.
#
# Внимание! Данная программа работает только совместно с Qualix и только в
# рамках группы сервисов.
#
# При запуске программы производятся последовательно следующие действия:
#	Подключаются все необходимые конфигурационные файлы.
#	Запускается СУБД Oracle.
#
# Параметры:
#	нет
#
# Возвращаемые значения:
#	0	O.K.
#	2	Listener не запушен
#	4	Listener свалился сразу после старта
#	100	Программу запустили не так
#	101	Ошибка подключения вспомогательных файлов
#

# Если эти переменные не описаны, значит нас запустили "руками"
# Переменная TOPDIR задает месторасположение Qualix HA+,
# например, /etc/opt/QUALha.
# Переменная SGNAME содержит имя сервисной группы
# Переменная SVCNAME содержит имя сервиса
if [[ -z ${TOPDIR} || -z ${SGNAME} || -z ${SVCNAME} ]]
then
	# Ошибка, переменные не описаны
	exit 100
fi

################################################################################
# Описываем переменные конфигурации и производим необходимые проверки

# Устанавливаем необходимые пути поиска
PATH=/sbin:/usr/sbin:/usr/xpg4/bin:/usr/bin:/var/adm/bin

# Строим расширенное имя программы
Name=${SGNAME}.${SVCNAME}.${0##*/}

# Внимание! Для работы программы необходимы следующие файлы:
set -A FilesToSource \
	${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/environment \
	'~${OracleUser}/.${SGNAME}.environment' \
	${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/configure \
	/var/adm/bin/logger.sh
	
# В файле ${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/environment содержатся
# основные настроечные параметры пакета.
#	ShutdownTimeOut
#	OracleUser
#	TestStatement
#	TestString
#	TestUser
#	SGFacility
#	ListenerName
#
# В файле ~${OracleUser}/.${SGNAME}.environment содержатся все необходимые
# администратору СУБД переменные окружения.
#	ORACLE_HOME
#	ORACLE_SID
#	PATH=${ORACLE_HOME}/bin:${PATH}
#	и прочие
#
# В файле ${TOPDIR}/sg/${SGNAME}/${SVCNAME}.d/configure содержатся
# переменные окружения для пакета.
#	DevDir
#	PIDsFile
#	MonitorProcess
#	ConfFile
#	ListenerCtl
#
# Файле /var/adm/bin/logger.sh содержит функцию Logger
# Следующие переменные необходимы для описания этой функции.
# При описании используем одинарные кавычки, чтобы передать имя переменной
# окружения, а не ее значение.
LOGGER_FACILITY='${SGFacility}'
LOGGER_TAG=${SGNAME}

# Добавляем указанные выше файлы
for File in ${FilesToSource[*]}
do
	eval File=${File}
	eval File=${File}
	if [[ -f ${File} ]]
	then
		. ${File}
	else
		print "${Name}:\tERROR: Unnable to source ${File}"
		exit 101
	fi
done

################################################################################
################################################################################

# Проверяем, есть ли файл конфигурации
if [[ ! -f ${ConfFile} ]]
then
	Logger err "Can't find init file (${ConfFile}) for Listener."
	exit 5
fi

################################################################################
# Стартуем listener для СУБД Oracle версии 7.3.x.

Logger info "Starting Listener..."

# Поскольку мы уже загрузили настройки пользователя oracle,
# делаем su без "-"
print "start ${ListenerName}\nexit" | \
	su ${OracleUser} -c "${ListenerCtl}"
if (( $? != 0 ))
then
	Logger err "Listener '${ListenerName}' NOT started!"
	exit 2
else
	Logger info "Listener '${ListenerName}' started!"
fi

# Строим список MonitorProcessesPIDs
MonitorProcessesPIDs=$(ps -fu ${OracleUser} | \
	grep "${MonitorProcess} ${ListenerName} -inherit" | \
	awk '{ print $2 }' )

if [[ -z ${MonitorProcessesPIDs} ]]
then
	# Процесса не обнаружено
	Logger alert "Listener '${ListenerName}' has failed at startup time!"
	# Сохраняем список процессов
	ps -fu ${OracleUser}
	exit 4
fi 

# Заносим pid'ы в файл
print ${MonitorProcessesPIDs} >${PIDsFile}
exit 0
