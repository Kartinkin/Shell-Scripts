#!/bin/sh
#
# Copyright (c) 1996 Qualix Group, Inc. All Rights Reserved.
#
# $Id: test.m,v 1.11 1998/03/26 00:44:08 plv Exp $
#
#

#
# This shell script will get run periodically 
# (service.test_interval)
# to verify that the service is funtional.
#
# Should return 0 if the service is OK; otherwise,
# return non-zero
#

# The following environment variables are passed in:
# TOPDIR: HA+ installation directory. For example: /etc/opt/QUALha
# SGNAME: Service Group name. For example: 193.92.34.2
# SVCNAME: Service name. For example: httpd
topdir=${TOPDIR}
sgname=${SGNAME}
svcname=${SVCNAME}
 
# If TOPDIR or SGNAME or SVCNAME is not set, very likely that this
# script was run manually. If so set svcdir to the current directory.
if test -z "${topdir}" -o -z "${sgname}" -o -z "${svcname}"
then
  svcdir="`pwd`"
else
  svcdir=${topdir}/sg/${sgname}/${svcname}.d
fi

cd ${svcdir}
bindir=${topdir}/bin

if test -f ./env
then
  . ./env
fi

if test X"${XXX_IN_QLOCK_NFSD}" = "X"
then
    argv0=$0
    argv=$*
    XXX_IN_QLOCK_NFSD=1
    export XXX_IN_QLOCK_NFSD
    if test -f ${bindir}/qlock
    then
      ${bindir}/qlock -p "$argv0 $argv" -l ${topdir}/etc/nfs.d.lock
    else
      $argv0 $argv
    fi
    status=$?

    exit ${status}
fi

echo "Testing service=${svcname}"

# nfsd
if test "${USE_RPCINFO}" -ne 0
then
  udp_rs=0
  if test "${UDP_PROTOCOL}" -eq 1
  then
    rpcinfo -T udp ${NFS_SERVER} 100003 1>/dev/null
    udp_rs=$?
    if test "${udp_rs}" -ne 0
    then
      echo "nfsd (udp) is not responding." 
    fi
  fi
  
  tcp_rs=0
  if test "${TCP_PROTOCOL}" -eq 1
  then
    rpcinfo -T tcp ${NFS_SERVER} 100003 1>/dev/null
    tcp_rs=$?
    if test "${tcp_rs}" -ne 0
    then
      echo "nfsd (tcp) is not responding." 
    fi
  fi
else
  # To force 'pgrep' usage
  udp_rs=1
  tcp_rs=1
fi

if test "${udp_rs}" -ne 0 -o "${tcp_rs}" -ne 0
then
  if test -f ${bindir}/pgrep
  then
    ${bindir}/pgrep "^${NFSD}" > /tmp/$$.nfsd.test
  else
    ps -ef | cut -c48- | grep ${NFSD} | grep -v grep > /tmp/$$.nfsd.test
  fi
  status=$?
  if test "${status}" -ne 0
  then
    /bin/rm -rf /tmp/$$.nfsd.test
    exit 1
  else
    if test "${USE_RPCINFO}" -ne 0
    then
      echo "nfsd is NOT responding via rpcinfo but nfsd is in the process table." 
      #cat /tmp/$$.nfsd.test
    fi
  fi
fi

# mountd
if test "${USE_RPCINFO}" -ne 0
then
  rpcinfo -T udp ${NFS_SERVER} 100005 1>/dev/null
  udp_rs=$?
  if test "${udp_rs}" -ne 0
  then
    echo "mountd (udp) is not responding." 
  fi
  
  rpcinfo -T tcp ${NFS_SERVER} 100005 1>/dev/null
  tcp_rs=$?
  if test "${tcp_rs}" -ne 0
  then
    echo "mountd (tcp) is not responding." 
  fi
else
  # To force 'pgrep' usage
  udp_rs=1
  tcp_rs=1
fi

if test "${udp_rs}" -ne 0 -o "${tcp_rs}" -ne 0
then
  if test -f ${bindir}/pgrep
  then
    ${bindir}/pgrep "^${MOUNTD}" > /tmp/$$.nfsd.test
  else
    ps -ef | cut -c48- | grep ${MOUNTD} | grep -v grep > /tmp/$$.nfsd.test
  fi
  status=$?
  if test "${status}" -ne 0
  then
    /bin/rm -rf /tmp/$$.nfsd.test
    exit 1
  else
    if test "${USE_RPCINFO}" -ne 0
    then
      echo "mountd is NOT responding via rpcinfo but mountd is in the process table." 
      #cat /tmp/$$.nfsd.test
    fi
  fi
fi

# Enhance NFS test. Please see nfs_test/README
if test -z "${ENHANCED_NFS_TEST}" -o "${ENHANCED_NFS_TEST}" -eq 0
then
  /bin/rm -rf /tmp/$$.nfsd.test
  exit 0
fi

etest=${svcdir}/nfs_test/nfs_test
if test ! -x ${etest}
then
  /bin/rm -rf /tmp/$$.nfsd.test
  exit 0
fi

tabs="${svcdir}/dfstab ${svcdir}/dfs.tab"
dfstab=""

for tab in ${tabs}
do
  if test -f ${tab}
  then
    dfstab=${tab}
    break
  fi
done

if test -z "${dfstab}"
then
  echo "Cannot find shared file system information in any of:"
  echo "${tabs}"
else
  cat ${dfstab} | egrep '^[^#]' | awk '{print $NF}' | (
    while read fs junk
    do
      if test "${UDP_PROTOCOL}" -eq 1
      then
	${etest} -v 2 ${NFS_SERVER} ${fs}
	if test "$?" -ne 0
	then
	  echo "Enhanced NFS test (udp) failed."
          /bin/rm -rf /tmp/$$.nfsd.test
	  exit 1
	fi
      fi

      if test "${TCP_PROTOCOL}" -eq 1
      then
	${etest} -v 3 ${NFS_SERVER} ${fs}
	if test "$?" -ne 0
	then
	  echo "Enhanced NFS test (tcp) failed."
          /bin/rm -rf /tmp/$$.nfsd.test
	  exit 1
	fi
      fi
    done
  )
fi
status=$?
/bin/rm -rf /tmp/$$.nfsd.test
exit ${status}

