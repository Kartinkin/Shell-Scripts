#!/bin/sh
#
# Copyright (c) 1996 Qualix Group, Inc. All Rights Reserved.
#
# $Id: SERVICE.script,v 1.14 1998/12/15 03:24:41 vlp Exp $
#

topdir=${TOPDIR}
sgname=${SGNAME}
sg=sg

# If TOPDIR is not set, very likely that this
# script was run manually. If so set topdir from pwd
if test -z "${TOPDIR}"
then
  TOPDIR="`pwd`/../.."
  topdir=${TOPDIR}
fi
export TOPDIR
bindir=${topdir}/bin

# If SGNAME is not set, very likely that this
# script was run manually. If so set sgname from pwd
if test -z "${SGNAME}"
then
  pwd="`pwd`"
  SGNAME="`basename ${pwd}`"
  sgname=${SGNAME}
fi
export SGNAME
sgdir=${topdir}/${sg}/${sgname}

do_checksg()
{
  echo "### sg=${sgname} -- Checking service group and services paths ..."
  checksg=${bindir}/checksg
  if test ! -x ${checksg}
  then
    return 0
  fi

  ${checksg} $*
  status=$?
  if test "${status}" -ne 0
  then
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 99)."
    echo ""
    exit 99	# clean exit. No resources
  else
    echo "### sg=${sgname} -- All service group and services path are valid. OK."
    return 0
  fi
}

do_check_storage_device()
{
  f=${sgdir}/check_storage_device.off
  if test -f "${f}"
  then
    echo "### sg=${sgname} --  File=${f} exists. Skip checking storage device."
    return 0
  fi

  fstab=${sgdir}/fs.tab
  cat ${fstab} | grep -v '^[ \t]*#' | tr '\011' ' ' | tr -s ' \011' | sort +2 | (
    while read dev rdev rest
    do
      [ -n "${dev}" ] || continue

      ${bindir}/scsi-check.sh ${dev} ${rdev} ${rest}
      status=$?
      if test "${status}" -ne 0
      then
        echo "do_check_storage_device($*) rdev=${rdev} is not accessible."
        return 99
      fi
    done

    return 0
  )

  return $?
}

do_qping()
{
  qping=${bindir}/qping.sh 
  if test ! -x ${qping}
  then
    return 0
  fi
  f=${sgdir}/qping.attempts
  if test -s ${f}
  then
    attempts="`cat ${f}`"
  else
    attempts=2
  fi
  tab=${sgdir}/if.tab
  if test -f ${sgdir}/qping.tab 
  then
    tab=${sgdir}/qping.tab
  fi

  ${qping} ${tab} ${attempts}
  status=$?
  if test "${status}" -ne 0
  then
    echo "### Service group=${sgname} is ready to transit to SERVED stated but"
    echo "###   an IP number for the service group is still ping'able."
    echo "###   Please check the heartbeat network for problems."
    #return 99
    return 88
  else
    return 0
  fi
}

do_check_isolation()
{
  check_isolation=${bindir}/check_isolation.sh
  if test ! -x ${check_isolation}
  then
    return 0
  fi
  ${check_isolation} ${sgname}
  status=$?
  if test "${status}" -ne 0
  then
    echo "### Service group=${sgname} is ready to transit to SERVED stated but"
    echo "###   we detected that the server is in network isolation."
    echo "###   We will NOT transit into SERVED state."
    return 88
  else
    return 0
  fi
}

do_pre_services()
{
  for i
  do
    SVCNAME=$i
    export SVCNAME
    f=${sgdir}/${i}.d/pre_start
    if test ! -f "${f}"
    then
      #echo "Optional file=$f does not exist. OK."
      continue;
    fi
    echo "### sg=${sgname} -- Running pre-Starting script for service=$i ..."
    chmod +x ${f}
    ${f}
    status=$?
    if test "${status}" -ne 0
    then
      echo "file=${f} failed with status=$status"
      #exit 1
    else
      echo "### sg=${sgname} -- pre-Starting script for service=$i run succesfully."
    fi
  done
}

do_SERVICE()
{
  export SGNAME
  f=${bindir}/service.sh
  if test ! -f "${f}"
  then
    echo "file=$f does not exist."
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
    exit 1
  fi
  chmod +x ${f} 
  ${f} ${bindir} ${sgdir}
  status=$?
  if test "${status}" -ne 0
  then
    echo "file=${f} failed with status=$status"
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
    exit 1
  fi
}

do_backout_SERVICE()
{
  f=${bindir}/standby.sh
  if test ! -f "${f}"
  then
    echo "file=$f does not exist."
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
    exit 1
  fi
  chmod +x ${f}
  ${f} ${bindir} ${sgdir}
  status=$?
  if test "${status}" -ne 0
  then
    echo "file=${f} failed with status=$status"
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
    exit 1
  fi

  return 0
}

do_services()
{
  done_services=""

  for i
  do
    echo "### sg=${sgname} -- Starting service=$i ..."
    SVCNAME=$i
    export SVCNAME
    f=${sgdir}/${i}.d/start
    if test ! -f "${f}"
    then
      echo "file=$f does not exist."
      do_backout_services ${done_services}
      status=$?
      if test "${status}" -eq 0
      then
	return 99
      else
        echo ""
        echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
        echo ""
        exit 1
      fi
    fi
    chmod +x ${f}
    ${f}
    status=$?
    if test "${status}" -ne 0
    then
      echo "file=${f} failed with status=$status"
      do_backout_services ${done_services}
      status=$?
      if test "${status}" -eq 0
      then
	return 99
      else
        echo ""
        echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
        echo ""
        exit 1
      fi
    else
      echo "### sg=${sgname} -- Started service=$i successfully."
      done_services="${i} ${done_services}"
    fi
  done
}

do_backout_services()
{
  for i
  do
    echo "### sg=${sgname} -- Stopping service=$i ..."
    SVCNAME=$i
    export SVCNAME
    f=${sgdir}/${i}.d/stop
    if test ! -f "${f}"
    then
      echo "file=$f does not exist."
      echo ""
      echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
      echo ""
      exit 1
    fi
    chmod +x ${f}
    ${f}
    status=$?
    if test "${status}" -ne 0
    then
      echo "file=${f} failed with status=$status"
      echo ""
      echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
      echo ""
      exit 1
    else
      echo "### sg=${sgname} -- Stopped service=$i successfully."
    fi
  done

  return 0
}

#echo XXX_IN_QLOCK_XXX=${XXX_IN_QLOCK_XXX}

if test X"${XXX_IN_QLOCK_XXX}" = "X"
then
  f=${sgdir}/start_sequentially
  if test -f ${f}
  then
    echo "### sg=${sgname} -- file=${f} exists. Will start in sequential mode."
    argv0=$0
    argv=$*
    XXX_IN_QLOCK_XXX=1
    export XXX_IN_QLOCK_XXX
    ${bindir}/qlock -d -p "$argv0 $argv" -l ${topdir}/etc/sg.start.lock
    status=$?

    exit ${status}
  else
    echo ""
    echo "### `date` - SERVICE.script starts for sg=${sgname}"
    echo ""
  fi
else
  echo ""
  echo "### `date` - SERVICE.script starts for sg=${sgname}"
  echo ""
fi

if test ! -f ${bindir}/PRE_SERVICE.script
then
  do_checksg "${sgname}"
  
  do_check_isolation
  status=$?
  if test "${status}" -ne 0
  then
    if test "${status}" -eq 88
    then
      :
    fi
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status ${status})."
    exit ${status}
  fi
  
  do_qping
  status=$?
  if test "${status}" -ne 0
  then
    if test "${status}" -eq 99
    then
      :
    fi
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status ${status})."
    exit ${status}
  fi

  do_check_storage_device
  status=$?
  if test "${status}" -ne 0
  then
    if test "${status}" -eq 99
    then
      :
    fi
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status ${status})."
    exit ${status}
  fi

fi

do_pre_services $*

do_SERVICE

do_services $*
status=$?
if test "${status}" -eq 99
then
  do_backout_SERVICE
  status=$?
  if test "${status}" -eq 0
  then
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 99)."
    echo ""
    exit 99
  else
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
    exit 1
  fi
elif test "${status}" -ne 0
then
    echo ""
    echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 1)."
    echo ""
  exit 1
fi

echo ""
echo "### `date` - SERVICE.script for sg=${sgname} is DONE (status 0)."
echo ""

exit 0
