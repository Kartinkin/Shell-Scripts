################################################################################
# Конфигурационный файл программы start-stop.sh
#
# Для того, чтобы воспользоваться программой start-stop.sh,
# сделайте на нее символьные ссылки с именами следующего вида:
#	{start|stop}.<Имя>.sh
# где <Имя> - идентификатор ресурсной группы.
# Данный файл должен называться start-stop.<Имя>.conf и находится в одной
# директории с символьными ссылками.
################################################################################
#
# Примеры:
# 	команда "ln -s start-stop.sh start.Boss.sh" создает ссылку с именем
#		для запуска ресурсной группы Босс-Кадровик
#		(конфигурационный файл start-stop.Boss.conf);
#	команда "ln -s start-stop.sh stop.TEMP.sh" создает ссылку с именем
#		для остановки ресурсной группы ТЕМП
#		(конфигурационный файл start-stop.TEMP.conf).
#
################################################################################

# Адреса (или имена) контроллеров нашего массива
set -A LocalSPNames 192.168.55.41 192.168.55.42
#set -A LocalSPNames 192.168.55.54 192.168.55.55

# Адреса (или имена) контроллеров удаленного массива
# Внимание! Не ставить одинаковые параметры на разных серверах.
# На резервном узле LocalSPNames и RemoteSPNames должны поменяться местами
set -A RemoteSPNames 192.168.55.54 192.168.55.55
#set -A RemoteSPNames 192.168.55.41 192.168.55.42

# Имена зеркал MirrorView. Если имя содержит пробелы, указывать его в кавычках
set -A Mirrors "Mirror of p570 p570_Aviastar_1" "Mirror of p570 p570_Aviastar_2" "Mirror of p570 p570_Aviastar_3"

# Список дисковых групп.
# Для каждой дисковой группы из списка VGs требуется указать
# в списке HDisks один физический диск из этой группы.
# Если имя диска для дисковой группы не указано,
# при подключении дисковых ресурсов для этой дисковой группы не будет
# проводиться обновления конфигурации при помощи команды importvg.
# Имена дисков могут быть разными на разных серверах.
# Нумерация начинается с 0
VGs[0]=aviavg2
HDisks[0]=hdisk2 
# При желании можно указать несколько групп. Например:
VGs[1]=aviavg1
HDisks[1]=""
VGs[2]=aviavg3
HDisks[2]=""

# Список файловых систем в порядке монтирования. ФС указываются через пробел
set -A FSs /u01 /u02 /u00

# Список сетевых интерфейсов. Для каждого указывается:
#	IP-адрес
#	маска подсети (можно не указывать)
#	сетевой адаптер, на котором создается дополнительный интерфейс
# Нумерация начинается с 0
IPs[0]="192.168.55.44"
Netmasks[0]="255.255.255.0"
Ifs[0]="en0"
# При желании можно указать несколько сетевых интерфейсов. Например:
#IPs[1]=
#Netmasks[1]=
#Ifs[1]=

# Второй узел, на котором может быть запущена данная ресурсная группа
RemoteHost=p570test2

# Администратор СУБД Oracle. От его имени запускаются процессы СУБД
OraAdm=oracle

# Параметры окружения для СУБД Oracle
ORACLE_SID=rightdb
ORACLE_BASE=/u01/oracle
ORACLE_HOME=${ORACLE_BASE}/db

# Имя listener, как прописано в файле listener.ora
LISTENER=LISTENER_DBRIGHT

# Время в секундах после комадны "shutdown immediate", по истечении которого
# дается команда "shutdown abort"
ImmediateTimeout=30

# Время в секундах после комадны "shutdown abort", по истечении которого
# всем процессам СУБД посылается сигнал SIGKILL
AbortTimeout=30

# Время в секундах после комадны "lsnrctl stop", по истечении которого
# процессу tnslsnr посылается сигнал SIGKILL
ListenerTimeout=10

################################################################################
################################################################################
#####                 !!!!! Ниже ничего не трогать !!!!!                   #####
################################################################################
################################################################################
export PATH=/usr/bin:/usr/sbin:/etc
export ORACLE_HOME
export ORACLE_BASE
export ORACLE_SID

MonitorInterval=5

function IsOracleOnline
# Параметры:
#	$1	Имя пользователя
#	$2	SID
#	$3	Timeout
# Возвращает в stdout pid'ы процессов СУБД
{
	i=0
	while (( $i<=$3 ))
	do
		[[ -z $(ps -u $1 -o args | egrep '^ora_...._'$2) ]] && break
		sleep $MonitorInterval
		(( i+=MonitorInterval ))
	done
	ps -u $1 -o args,pid | awk '/^ora_...._'$2'/ {print $2}'
}

function IsListenerOnline
# Параметры:
#	$1	Имя пользователя
#	$2	Listener name
#	$3	Timeout
# Возвращает в stdout pid процесса
{
	i=0
	while (( $i<=$3 ))
	do
		[[ -z $(ps -u $1 -o args | grep -i "tnslsnr $2") ]] && break
		sleep $MonitorInterval
		(( i+=MonitorInterval ))
	done
	ps -u $1 -o args,pid | awk 'BEGIN { LSNR=toupper($2); lsnr=tolower($2) }
		$0~"/bin/tnslsnr "LSNR || $0~"/bin/tnslsnr "lsnr {print $NF}'
}